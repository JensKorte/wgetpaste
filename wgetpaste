#!/bin/bash
# A Script that automates pasting to a number of pastebin services
# relying only on bash v3, sed, coreutils (mktemp/sort/wc/whoami) and wget
# Author: Bo Ã˜rsted Andresen, bo.andresen@zlin.dk
##########################################################################

VERSION="1.9"

### helper functions

# show an error message and die
die() {
	echo "$*" 1>&2
	exit 1
}


# escape % (used for escaping), & (used as separator in POST data), + (used as space in POST data) and space
escape() {
	echo "$*" | sed -e 's|%|%25|g' -e 's|&|%26|g' -e 's|+|%2b|g' -e 's| |+|g'
}	

### usage

show_usage() {
	echo "Usage: $0 [options] [file]"
	echo
	echo "Options:"
	echo "    -l, --language LANG           set language (defaults to \"Plain Text\")"
	echo "    -d, --description DESCRIPTION set description (defaults to \"stdin\" or filename)"
	echo "    -n, --nick NICK               set nick (defaults to your username))"
	echo
	echo "    -v, --verbose                 show wget stderr output if no url is received"
	echo "        --debug                   be *very* verbose (implies -v)"
	echo
	echo "    -h, --help                    show this help"
	echo "        --version                 show version information"
	echo
	echo "Languages supported:"
    echo '    "C", "C89", "C99", "C++", "C#", "Java", "Pascal", "Perl",'
    echo '    "PHP", "PL/I", "Python", "Ruby", "SQL", "VB", "Plain Text"'
}

### read cli options

# if you know a better option (like getopts) which provides the same features
# please let me know how.
while [[ ! -z "${1}" ]]; do
	case "${1}" in
		--debug )
		DEBUG=true
		set -x
		shift
		;;
		--description=* )
		[[ -z "${1#*=}" ]] && show_usage 1>&2 && exit 1
		DESCRIPTION="$(escape "${1#*=}")"
		shift
		;;
		-d | --description )
		[[ -z "${2}" ]] && show_usage 1>&2 && exit 1
		DESCRIPTION="$(escape "${2}")"
		shift 2
		;;
		-h | --help )
		show_usage
		exit 0
		;;
		--language=* )
		[[ -z "${1#*=}" ]] && show_usage 1>&2 && exit 1
		LANGUAGE="${1#*=}"
		shift
		;;
		-l | --language )
		[[ -z "${2}" ]] && show_usage 1>&2 && exit 1
		LANGUAGE="${2}"
		shift 2
		;;
		--nick=* )
		[[ -z "${1#*=}" ]] && show_usage 1>&2 && exit 1
		NICK="$(escape "${1#*=}")"
		shift
		;;
		-n | --nick )
		[[ -z "${2}" ]] && show_usage 1>&2 && exit 1
		NICK="$(escape "${2}")"
		shift 2
		;;
		-v | --verbose )
		VERBOSE=true
		shift
		;;
		--version )
		echo "$0, version ${VERSION}"
		exit 0
		;;
		*)
		if [[ -f "${1}" ]]; then
			SOURCE="${1}"
			shift
		else
			show_usage 1>&2
			exit 1
		fi
		;;
	esac
done

# set default service, nick, source and tabs convertion
NICK="${NICK:-"$(whoami)"}"
SOURCE="${SOURCE:-/dev/stdin}"
CVT_TABS="No"
LANGUAGE="${LANGUAGE:-"Plain Text"}"

# set default description
if [[ -z "${DESCRIPTION}" ]]; then
	if [[ "${SOURCE}" == "/dev/stdin" ]]; then
		DESCRIPTION="stdin"
	else
		DESCRIPTION="${SOURCE}"
	fi
fi

# handle the case where the input source (defaulting to /dev/stdin) isn't readable verbosely
if [[ ! -r "${SOURCE}" ]]; then
	echo "The input source: \"${SOURCE}\" is not readable. Please specify a readable input source." 1>&2
	echo 1>&2
	show_usage 1>&2
	exit 1
fi

INPUT="$(escape "$(<${SOURCE})")"
[[ -z "${INPUT}" ]] && die "No input read. Nothing to paste. Aborting."

NICK=$(escape "${NICK}")
LANGUAGE=$(escape "${LANGUAGE}")
DESCRIPTION=$(escape "${DESCRIPTION}")

# create temp file (wget is much more reliable reading large input from a file than from the cli directly
TEMPFILE="$(mktemp /tmp/wgetpaste.XXXXXX)"
[[ -f "${TEMPFILE}" ]] || die "Failed to create a temporary file." 1>&2

echo "lang=${LANGUAGE}&nick=${NICK}&desc=${DESCRIPTION}&cvt_tabs=${CVT_TABS}&text=${INPUT}" > "${TEMPFILE}" || die "Failed to write to temporary file: \"${TEMPFILE}\"."

# paste it
WGET_ARGS="--tries=5 --timeout=60 --post-file=${TEMPFILE}"
if [[ ! ${DEBUG} ]] && [[ -w /dev/null ]]; then
	OUTPUT=$(wget -O /dev/null ${WGET_ARGS} http://rafb.net/paste/paste.php 2>&1)
else
	OUTPUT=$(wget -O - ${WGET_ARGS} http://rafb.net/paste/paste.php 2>&1)
fi

# clean temporary file
if [[ ! ${DEBUG} ]]; then
	rm "${TEMPFILE}" || echo "Failed to remove temporary file: \"${TEMPFILE}\"." 1>&2
else
	echo "Left temporary file: \"${TEMPFILE}\" alone for debugging purposes."
fi

# get the url
URL="$(echo "${OUTPUT}" | sed -n 's|^.*Location:\ \(http://rafb.net/p[^\ ]\+\).*$|\1|p')"

if [[ "${URL}" == "http://rafb.net/p/toofast.html" ]]; then
	echo "You must wait at least 10 seconds between each paste! Try again in 10 seconds."
	exit 1
elif [[ -z "${URL}" ]]; then
	if [[ ${DEBUG} ]] || [[ ${VERBOSE} ]]; then
		echo "Apparently nothing was received. Perhaps the connection failed." 1>&2
		echo "${OUTPUT}" 1>&2
	else
		echo "Apparently nothing was received. Perhaps the connection failed. Enable --verbose or" 1>&2
		echo "--debug to get the output from wget that can help diagnose it correctly." 1>&2
	fi
	exit 1
fi

echo "Your paste can be seen here: ${URL}"
exit 0
